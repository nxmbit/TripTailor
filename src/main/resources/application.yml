spring:
  application:
    name: triptailor

  # DB Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${SPRING_OAUTH2_GOOGLE_CLIENT_ID}
            clientSecret: ${SPRING_OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          facebook:
            clientId: ${SPRING_OAUTH2_FACEBOOK_CLIENT_ID}
            clientSecret: ${SPRING_OAUTH2_FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile
          github:
            clientId: ${SPRING_OAUTH2_GITHUB_CLIENT_ID}
            clientSecret: ${SPRING_OAUTH2_GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

  # AI Configuration
  ai:
    openai:
      api-key: ${SPRING_AI_OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4.1

  # Config Import
  config:
    import: optional:file:.env[.properties]

# Logging Configuration
logging:
  level:
    root: ${LOGGING_LEVEL}

# JWT Configuration
security:
  jwt:
    access-token:
      secret-key: ${SECURITY_JWT_SECRET_KEY}
      token-expiration: 3600000
    refresh-token:
      token-expiration: 604800000
  cors:
    allowedOrigins: http://localhost:3000, http://localhost:8080
  oauth2:
    redirectUri: http://localhost:3000/#/oauth2/redirect

# AWS S3 Configuration
aws:
  s3:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    region: ${AWS_REGION}
    bucket-name: ${AWS_BUCKET_NAME}
    link-expiration: 3600

# Google Maps Configuration
google:
  maps:
    api:
      key: ${GOOGLE_MAPS_API_KEY}

